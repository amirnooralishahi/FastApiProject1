"""change column

Revision ID: b37f394b4221
Revises: 2726da4a8239
Create Date: 2025-02-20 13:29:01.235918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b37f394b4221'
down_revision: Union[str, None] = '2726da4a8239'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_passenger_NationalCode', table_name='passenger')
    op.drop_table('passenger')
    op.drop_table('reserve')
    op.drop_table('room')
    op.drop_table('payment')
    op.drop_table('RecordReserve')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('RecordReserve',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('passenger_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], name='RecordReserve_passenger_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name='RecordReserve_payment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='RecordReserve_room_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='RecordReserve_pkey')
    )
    op.create_table('payment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('passenger_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Allpaid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('tuition', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('debt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('paymentDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], name='payment_passenger_id_fkey'),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='payment_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payment_pkey')
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Dormitory', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Building_Information', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Bed_Service', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Toilet_Bathroom', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('Accommodation_cap', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Perspective', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Internal_Faclities', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Additional_Details', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Time_reserve', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='room_pkey')
    )
    op.create_table('reserve',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('passenger', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('DeliveryDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('DischargeDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Evacution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['passenger'], ['passenger.id'], name='reserve_passenger_fkey'),
    sa.PrimaryKeyConstraint('id', name='reserve_pkey')
    )
    op.create_table('passenger',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lastname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('NationalCode', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_owner', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('Is_inspector', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('Job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='passenger_pkey'),
    sa.UniqueConstraint('username', name='passenger_username_key')
    )
    op.create_index('ix_passenger_NationalCode', 'passenger', ['NationalCode'], unique=True)
    # ### end Alembic commands ###
